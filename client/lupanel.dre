<class name="lupanel" width="100%" height="100%" bgcolor="ffffff" border="2" bordercolor="1b2a69">
    <attribute name="accountdao" type="object"/>
    <attribute name="basecolor" value="1b2a69" type="string"/>
    <attribute name="title" type="string" value="陆金所"/>
    <method name="initNode" args="p, attrs">
        this.super();
        this.accountdao = new dr.accountdao(this, {source: "www.lu.com"});        
    </method>

    <method name="updateAccountInfo" args="callback">
        var usersection = this.scrollp.scrollv.userInfo;
        var user = usersection.content.user.getValue();
        var pwd = usersection.content.pwd.getValue();
        var jypwd = usersection.content.jypwd.getValue();

        var bidsection = this.scrollp.scrollv.bidSettings;
        var interestValues = bidsection.content.interest.getRangeValues();
        var priceValues = bidsection.content.price.getRangeValues();
        var balanceValues = bidsection.content.balance.getRangeValues();

        var acc = {
            user: user,
            password: pwd,
            tradepassword: jypwd,
            reservedbalance: balanceValues.left,
            interestlevelmin: interestValues.left/100,
            interestlevelmax: interestValues.right/100,
            priceperbidmin: priceValues.left,
            priceperbidmax: priceValues.right
         };

        this.accountdao.reset(acc);
        var me = this;
        this.accountdao.updateAccountInfo(function(result){
            usersection.updateSummary();
        });

        usersection.setAttribute("ispreviewmode", true);
    </method>
    
    <method name="startAccountBidding" args="callback">
        var bidsection = this.scrollp.scrollv.bidSettings;
        var interestValues = bidsection.content.interest.getRangeValues();
        var priceValues = bidsection.content.price.getRangeValues();
        var balanceValues = bidsection.content.balance.getRangeValues();

        var attrs = {
            reservedbalance: balanceValues.left,
            interestlevelmin: interestValues.left/100,
            interestlevelmax: interestValues.right/100,
            priceperbidmin: priceValues.left,
            priceperbidmax: priceValues.right
         };
         this.accountdao.update(attrs);  
        this.accountdao.startAccountBidding(function(resJson){
            console.log("startAccountBidding", resJson);
            callback();
        });
    </method>
    
    <method name="checkToStopAccountBidding">
        if (this.accountdao.isAccountBiddingStarted()) {
            this.stopAccountBidding();
        }
    </method>

    <method name="stopAccountBidding" args="callback">
        var usersection = this.scrollp.scrollv.userInfo;
        var bidsection = this.scrollp.scrollv.bidSettings; 
        this.accountdao.stopAccountBidding(function(){
            //usersection.setAttribute("ispreviewmode", false);
            //bidsection.setAttribute("ispreviewmode", false);
            if (callback) callback();
            //this.setAttribute("istransfering", false);
        });
    </method>

    <method name="resetLoginView">
        var usersection = this.scrollp.scrollv.userInfo;
        usersection.setAttribute("ispreviewmode", false);
    </method>

    <view name="titleBar" width="100%" height="120" gradient="['linear', 45, '#1b2a69 40%', '#5556aa']" padding="15">
        <text text="${this.parent.parent.title}"  fontsize="80" bold="false" color="f8f8f8"></text>
       <!--  <text name="ltxt" x="right" y="20" color="8586ca" text="" italic="true" fontsize="30"/>
        <anitext name="anitxt" x="right" y="bottom" color="f8f8f8" displaytext="请登录..." italic="true" fontsize="40"/>
         -->
        <messageboard name="msgboard" x="right" y="bottom" height="80" width="300" messagequeue="['请登录...']">

        </messageboard>
    </view>
    <view name="scrollp" y="120"  width="100%" height="${this.parent.height-this.y}"  scrollable="true" bgcolor="fbfbfb">
         <view name="scrollv" padding="0" width="100%" height="auto">
            <spacedlayout axis="y" spacing="30" updateparent="true" inset="60" />
            
            <section name="userInfo" title="账户信息" width="100%" showpreviewbutton="true" bottomborder="0">
                <spacedlayout axis="y" spacing="0" updateparent="true" />
                <labelinput name="user" label="用户名:" labelwidth="220" width="100%" 
                    border="2" bordercolor="e8e8e8" topleftcornerradius="10" toprightcornerradius="10"></labelinput>
                <labelinput name="pwd" label="密码:" labelwidth="220" width="100%"
                    leftborder="2" rightborder="2" bordercolor="e8e8e8" inputtype="password">

                </labelinput>
                <labelinput name="jypwd" label="交易密码:" labelwidth="220" width="100%"
                    border="2" bordercolor="e8e8e8" bottomleftcornerradius="10" bottomrightcornerradius="10" inputtype="password"></labelinput>
                <!--infobutton ignorelayout="true" x="right"/-->
                <!--view height="10"/-->
               
                <!--text text="查看账户信息" color="orange"
                    clickable="true" fontsize="40" italic="true" underline="true">
                    <handler event="onwidth">
                        this.setAttribute("x", this.parent.jypwd.x+this.parent.jypwd.width-this.width)
                    </handler>

                    <handler event="onclick">
                        this.classroot.updateAccountInfo();                        
                    </handler>
                </text-->
                
                <text name="backbtn" text="知道了" color="orange" ignoreplacement="true"
                    clickable="true" fontsize="40" italic="true" underline="true" 
                    visible="false" y="bottom">
                    <handler event="onwidth">
                        this.setAttribute("x", this.parent.content.jypwd.x+this.parent.content.jypwd.width-this.width)
                    </handler>

                    <handler event="onclick">
                        this.parent.setAttribute("ispreviewmode", false);                        
                    </handler>
                </text>
                
                <handler event="onispreviewmode">
                    this.backbtn.setAttribute("visible", (this.classroot.accountdao.status === "invalid" || this.classroot.accountdao.status === "failed") && this.ispreviewmode)                
                </handler>

                <method name="getSummary">
                    this.backbtn.setAttribute("visible", (this.classroot.accountdao.status === "invalid" || this.classroot.accountdao.status === "failed") && this.ispreviewmode)
                    var smr = this.classroot.accountdao.getStatusSummary();
                    return smr;
                </method>

            </section>

            <view width="100%" padding="30" toppadding="0">
                <actionbuttons width="100%">
                    <handler event="oninit">
                        var me = this;
                        this.listenTo(this.classroot.accountdao, "onstatus", "_handleStatusChanged")
                        this.listenTo(this.classroot.accountdao, "onaction", "_handleActionChanged")
                    </handler>

                    <method name="doOnClick" args="v"><![CDATA[
                        var prestatus = this.status;
                        this.super();
                        if (!this.inited) return;
                        var me = this;
                        var s = this.tostatus;
                        if (s===1 && prestatus === 0) {
                            this.classroot.updateAccountInfo(function(){
                                me.setAttribute("istransfering", false);
                            });
                        } else if (s===1 && prestatus === 2){
                            this.classroot.stopAccountBidding(function(){
                                me.setAttribute("istransfering", false);
                            });
                        } else if (s===2 && prestatus === 1) {
                            this.classroot.startAccountBidding(function(){
                                me.setAttribute("istransfering", false);
                            });
                        } else if (s===0 && prestatus === 2) {
                            this.classroot.stopAccountBidding(function(){
                                me.setAttribute("istransfering", false);
                                me.classroot.resetLoginView();
                            });
                        } else if (s===0 && prestatus === 1) {
                            me.setAttribute("istransfering", false);
                            me.classroot.resetLoginView();
                        }
                        ]]>
                    </method>

                    <method name="_handleStatusChanged" args="status">
                        console.log("_handleStatusChanged", status, this.classroot.accountdao.action)
                        var action = this.classroot.accountdao.action;
                        
                        if (action==="updateAccountInfo") {
                            if (status === "invalid") {
                                this.setAttribute("status", 0);
                                this.classroot.titleBar.msgboard.pushMessage("登陆信息错误!");
                                this.classroot.titleBar.msgboard.pushMessage("请登录...");
                            } else if (status === "successful") {
                                this.classroot.titleBar.msgboard.pushMessage("登录成功!");
                            } else if (status === "failed") {
                                this.setAttribute("status", 0);
                                this.classroot.titleBar.msgboard.pushMessage("登陆信息错误!");
                                this.classroot.titleBar.msgboard.pushMessage("请登录...");
                            } else if (status === "loading") {
                                this.classroot.titleBar.msgboard.pushMessage("登录中...");
                            }
                            this.setAttribute("istransfering", status==="loading")
                        } else if (action === "stopAccountBidding") {
                            //if (status === "successful") this.setAttribute("status", 1);
                            this.setAttribute("istransfering", status==="loading");
                            this.classroot.titleBar.msgboard.pushMessage(status==="loading"?"暂停投标...": "投标已暂停!");
                        } else if (action === "startAccountBidding") {
                            this.classroot.titleBar.msgboard.pushMessage(status==="loading" ? "开始投标...":  "投标已开始...");
                        }
                    </method>

                    <method name="_handleActionChanged" args="action">
                        console.log("_handleActionChanged", action, this.classroot.accountdao.status);
                        var status = this.classroot.accountdao.status;
                        if (!status === "") return;

                        if (action === "updateAccountInfo") {
                            //this.setAttribute("status", status === "invalid" ? 0 : 1);
                            this.setAttribute("istransfering", status !== "invalid");
                        } else  if (action === "startAccountBidding"){
                            //this.setAttribute("status", 2);
                            this.setAttribute("istransfering", true);
                        } else  if (action === "stopAccountBidding"){
                            //this.setAttribute("status", 1);
                            this.setAttribute("istransfering", true);
                        }  
                        //this.setAttribute("istransfering", s==="loading")
                        
                    </method>
                </actionbuttons>
                
            </view>
            <view height="80"/>
            <section name="bidSettings" title="投标设置"  width="100%" bottompadding="80">
                <spacedlayout axis="y" spacing="50" updateparent="true"  inset="0"/>

                <fundtypeselectior name="fundtype" width="100%" data='[{"label":"稳盈-安e ", "types":[["新", false], ["转", true]]}, {"label":"稳盈-安e+", "types":[["新", false], ["转", true]]}]'>
                    <handler event="onchange" args="item">
                        console.log("onchange", this.data, item)
                    </handler>
                </fundtypeselectior>

                <calliper name="interest" width="100%" title="标的收益率区间"  unit="%"
                    rangesliderattributes='{"startvalue": 0, "endvalue": 20, "leftvalue": 8, "rightvalue": 20, "roundsize": 0.5, "minrangevalue": 1}'>
                    <method name="handleValueChangedAfterDragging" args="vs">
                        this.super();
                        this.classroot.checkToStopAccountBidding();
                    </method>
                </calliper>
                
                <calliper name="price"  width="100%"  title="标的价格区间"
                    rangesliderattributes='{"startvalue": 0, "endvalue": 5000, "leftvalue": 100, "rightvalue": 1000, "roundsize": 100, "minrangevalue": 200}'>
                    <method name="handleRangeValues" args="values">
                        this.super();
                        if (!this.inited) return;
                        var balance = this.parent.balance;
                        var bvalues = balance.getRangeValues();
                        balance.updateRangeValues({left:bvalues.left, right: bvalues.left+values.left});
                     </method>
                     <method name="handleValueChangedAfterDragging" args="vs">
                        this.super();
                        this.classroot.checkToStopAccountBidding();
                    </method>
                </calliper>

                <calliper name="balance" width="100%" title="保留账户余额区间" 
                    rangesliderattributes='{"startvalue": 0, "endvalue": 2000, "leftvalue": 0, "rightvalue": 100, "roundsize": 100, "minrangevalue": 100, "rangemasteronleft":true, "rangerightdraggable":false}'>
                    <method name="handleValueChangedAfterDragging" args="vs">
                        this.super();
                        this.classroot.checkToStopAccountBidding();
                    </method>
                </calliper>

                <!--method name="handlePreviewMode" args="ispreview">
                    this.content.fundtype.showSelector(!ispreview);
                    this.content.interest.showSlider(!ispreview);
                    this.content.price.showSlider(!ispreview);
                    this.content.balance.showSlider(!ispreview);
                </method-->

                <method name="getSummary"><![CDATA[
                    var str = "";
                    var interest = this.content.interest;
                    str += interest.title + "：<span style='color:orange;font-size: 80px;line-height:1.2'>" + interest.leftvalue +"% ~ " + interest.rightvalue + "%</span><br>";
                    var price = this.content.price;
                    str += price.title+ "(元)：<span style='color:orange;font-size: 80px;line-height:1.2'>"  + price.leftvalue +" ~ " + price.rightvalue + "</span><br>";
                    var balance = this.content.balance;
                    str += balance.title+ "(元)：<span style='color:orange;font-size: 80px;line-height:1.2'>"  + balance.leftvalue +" ~ " +balance.rightvalue + "</span><br>";

                    return str;
                ]]>
                </method>
            </section>

        </view>
    </view>
</class>